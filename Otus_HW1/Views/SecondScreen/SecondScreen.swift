//
//  SecondScreen.swift
//  Otus_HW1
//
//  Created by –°—Ç–∞–Ω–∏—Å–ª–∞–≤ –ì–∞–ø–æ–Ω–æ–≤ on 04.03.2023.
//

import SwiftUI
import NavigationStack


struct SecondScreen: View {
    
    @StateObject var foodListVM: SecondScreen__VM = .init()
    @EnvironmentObject var navigationStack: NavigationStackModel
        
    var body: some View {
        /// –ü–æ–ø—ã—Ç–∫–∞ —Å–¥–µ–ª–∞—Ç—å –∫–∞—Å—Ç–æ–º–Ω—ã–π navigation view
        /// –°–∞–º navigation view –ø–æ–ª—É—á–∏–ª—Å—è, —Ä–∞–±–æ—Ç–∞–µ—Ç, –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –º–æ–¥—É–ª–µ
        /// –ê –≤–æ—Ç –≤—Å—Ç—Ä–æ–∏—Ç—å –µ–≥–æ –ø–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º—É –≤ TabView –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å
        /// –ü—Ä–∏—à–ª–æ—Å—å –∏–¥—Ç–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–∫–∏–¥—ã–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ —Å —ç–∫—Ä–∞–Ω–∞ TabViewScreen
        /// –•–æ—Ç–µ–ª —Å–¥–µ–ª–∞—Ç—å –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ç–∞–± –≤—å—é, –∫–æ—Ç–æ—Ä—ã–π —Å–∞–º –±—É–¥–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–µ—Ö–æ–¥—ã, –Ω–æ –Ω–µ —Ö–≤–∞—Ç–∏–ª–æ –≤—Ä–µ–º–µ–Ω–∏(–∏ –Ω–∞–≤—ã–∫–æ–≤ –ø–æ–∫–∞ —á—Ç–æüôÇ)
//        CustomNavigationView {
            HStack(spacing: 0) {
                if navigationStack.current == nil {
                    VStack(spacing: 0) {
                        CustomNavigationBar(text: "FoodList")
                            .environmentObject(navigationStack)
                        foodList
                    }
                } else {
                    navigationStack.current!.screen
                }
            }
//        }
    }
    
    var foodList: some View {
        List() {
            Section {
                foodCells
            } header: {
                FoodFilter(isOn: $foodListVM.isFiltered)
            }
        }
        .animation(.easeIn, value: foodListVM.isFiltered)
    }
    
    private func refreshable() {
        foodListVM.isFiltered = false
        foodListVM.refreshFood()
    }
    
    var foodCells: some View {
        ForEach($foodListVM.foods.foods) { food in
            if !foodListVM.isFiltered || food.isFaforites.wrappedValue {
                FoodCell(name: food.name)
                    .environmentObject(navigationStack)
            }
        }.onDelete { index in
            foodListVM.foods.foods.remove(atOffsets: index)
        }
    }
    
}

struct FoodCell: View {
    
    @Binding var name: String
    @EnvironmentObject var navigationStack: NavigationStackModel
    
    var body: some View {
        /// –°–¥–µ–ª–∞–ª –∫–∞—Å—Ç–æ–º–Ω—ã–π navigationBar
        /// –†–∞–±–æ—Ç–∞–µ—Ç, —Ç–æ–ª—å–∫–æ –Ω–∞–¥–æ —É–≤–µ–ª–∏—á–∏—Ç—å –∑–æ–Ω—É –Ω–∞–∂–∞—Ç–∏—è
        /// –î—É–º–∞—é –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏ —Ç–∞–∫ —Å–æ–π–¥–µ—ÇüôÇ
        NavigationWrapper(push: FoodDetailScreen(name: name)) {
            HStack {
                Text(name)
                    .font(.largeTitle)
                Spacer()
                Image(systemName: "chevron.right")
            }
            .contentShape(Rectangle())
        }
        .environmentObject(navigationStack)
    }
    
    /*
    var body: some View {
        
//        NavigationLink(
//            destination: {
//                FoodDetailScreen(name: name)
//
//            }
//        )
//        {
            Text(name)
                .font(.largeTitle)
            /*
             –ù–µ –º–Ω–æ–≥–æ –ø–æ–∏–≥—Ä–∞–ª—Å—è —Å TextField. –°—Ç—Ä–∞–Ω–Ω–æ –æ—Ç—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç.
             –ü–æ–¥–æ–∑—Ä–µ–≤–∞—é, —á—Ç–æ –ø—Ä–æ–±–ª–µ–º–∞ –≤ –±–∏–Ω–¥–∏–Ω–≥–µ. –í–∏–¥–∏–º–æ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è
             name, –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–µ—Ä–µ—Ä–µ—Å–æ–≤–∫–∞ –ª–∏—Å—Ç–∞
             
             
            TextField("Food name", text: $name)
                .font(.largeTitle)
                .onSubmit {
                    print("\(name)")
                }
             */
//        }
        /*
         
         –¢—É—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ —Ç–æ–∂–µ —Å–∞–º–æ–µ,
         —Ç–æ–ª—å–∫–æ —è—á–µ–π–∫–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø—Ä—ã–≥–∞–µ—Ç –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∏–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –≤ TextEditor
         
         NavigationLink(destination: {
             TextEditor(text: $name)
                 .font(.system(size: 264))
                 .multilineTextAlignment(.center)
         }) {
             TextEditor(text: $name)
                 .font(.largeTitle)
                 .onSubmit {
                     print("\(name)")
                 }
         }
         */
    }
    */
}

struct FoodFilter: View {
    
    @Binding var isOn: Bool
    
    var body: some View {
        Toggle(isOn: $isOn) {
            Text("Favorites")
        }
//        .animation(.linear(duration: 0.3), value: isOn)
    }
    
}


struct SecondScreen_Previews: PreviewProvider {
    static var previews: some View {
        SecondScreen()
    }
}
